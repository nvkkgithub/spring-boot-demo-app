<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.7.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.vk.spring</groupId>
	<artifactId>spring-boot-app</artifactId>
	<version>0.0.1</version>
	<name>spring-boot-app</name>
	<packaging>jar</packaging>
	<description>Spring Boot Application</description>

	<properties>
		<maven.test.skip>true</maven.test.skip>
        <maven.test.failure.ignore>true</maven.test.failure.ignore>
		<java.version>1.8</java.version>
		<sonar.jacoco.version>0.7.0.201403182114</sonar.jacoco.version>
		<sonar.junit.reportsPath>target/surefire-reports</sonar.junit.reportsPath>
		<sonar.scanner.version>3.6.0.1398</sonar.scanner.version> <!-- 3.3.0.603 -->
		<sonar.java.binaries>target/classes</sonar.java.binaries>
	</properties>

	<dependencies>
		<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <configuration>
                    <mainClass>com.vk.spring.HelloWorldApp</mainClass>
                </configuration>
			</plugin>
			
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <!-- <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.vk.spring.HelloWorldApp</mainClass>
                        </manifest>
                    </archive>
                </configuration> -->
            </plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar.scanner.version}</version>
				<!--
				option#1
				mvn clean install sonar:sonar -Dsonar.host.url=http://localhost:9000
				optional-args: -Dsonar.login=admin -Dsonar.password=********

				option#2: with jacoco
				mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install 
				mvn clean install sonar:sonar -Dsonar.host.url=http://localhost:9000
				-->
				<!--
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>sonar</goal>
						</goals>
					</execution>
				</executions>
				-->
			</plugin>
			<!--
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${sonar.jacoco.version}</version>
				<configuration>
					<destFile>${sonar.jacoco.reportPath}</destFile>
					<append>true</append>
				</configuration>
				<executions>
					<execution>
						<id>agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->

		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		
		

	</build>

	<profiles>
		<profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.20.1</version>
                        <configuration>
                            <images>
                                <image>
                                    <name>hellojava</name>
                                    <build>
                                        <from>openjdk:latest</from>
                                        <assembly>
											<descriptorRef>artifact</descriptorRef>
											<!-- Package artifact into 'maven' directory of container -->
                                        </assembly>
                                        <cmd>java -jar maven/${project.name}-${project.version}.jar</cmd>
									</build>
									<!-- Container will start and wait for 'Hello World!' text -->
                                    <run>
                                        <wait>
                                            <log>Hello World!</log>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
								<id>docker:build</id>
								<!-- Phase 'mvn package -Pdocker' will execute id 'docker:build'-->
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
								<id>docker:start</id>
								<!-- Phase 'mvn install -Pdocker' will execute id 'docker:start'-->
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                    <goal>logs</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
	</profiles>
	

</project>
